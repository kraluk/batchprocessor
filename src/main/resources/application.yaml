spring:
  application.name: order-processor
  main:
    web-application-type: servlet
  profiles.active: ${ENVIRONMENT:local}
  threads:
    virtual.enabled: true
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    hikari:
      minimum-idle: 15
      maximum-pool-size: 15
      # data-source-properties:
        # re-write-batched-inserts: true
  liquibase:
    enabled: true
    change-log: classpath:liquibase/changelog.xml
  mvc:
    problemdetails:
      enabled: true

server:
  port: 8080
  shutdown: graceful

logging:
  level:
    org.jooq.Constants: WARN
    org.javamoney.moneta: WARN
    com.gruelbox.transactionoutbox.TransactionOutboxImpl: WARN

management:
endpoints:
  web:
    exposure:
      include: health, info, prometheus, openapi, swagger-ui
  endpoint:
    health:
      probes:
        enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
      environment: ${spring.profiles.active}
    distribution:
      percentiles:
        http:
          server:
            requests: [ 0.99, 0.95, 0.75, 0.50 ]
          client:
            requests: [ 0.99, 0.95, 0.75, 0.50 ]
  observations:
    annotations:
      enabled: true

springdoc:
    api-docs:
      path: /api-docs

app:
  order:
    event:
      sqs:
        queue-name: ${SQS_QUEUE_ORDER_UPDATED}
    temporary-batch:
      size: ${app.order.orchestrator.chunk-size}
    batch:
      size: ${app.order.orchestrator.chunk-size}
    orchestrator:
      chunk-size: 500
      parallel-consumers: 20
    update:
      s3:
        bucket-name: ${S3_BUCKET_ORDER_UPDATES}
  transaction-outbox:
    resumer-delay: PT5M
    flush-batch-size: 2048
    attempt-frequency: PT5M